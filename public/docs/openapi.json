{
    "openapi": "3.0.0",
    "info": {
        "title": "Book Management API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "API Server"
        }
    ],
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "RegisterRequest": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                }
            },
            "UserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    }
                }
            },
            "BookRequest": {
                "type": "object",
                "required": [
                    "title",
                    "author",
                    "publication_year"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "The Great Gatsby"
                    },
                    "author": {
                        "type": "string",
                        "example": "F. Scott Fitzgerald"
                    },
                    "publication_year": {
                        "type": "integer",
                        "example": 1925
                    }
                }
            },
            "UpdateBookRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "The Great Gatsby"
                    },
                    "author": {
                        "type": "string",
                        "example": "F. Scott Fitzgerald"
                    },
                    "publication_year": {
                        "type": "integer",
                        "example": 1925
                    }
                }
            },
            "BookResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "The Great Gatsby"
                    },
                    "author": {
                        "type": "string",
                        "example": "F. Scott Fitzgerald"
                    },
                    "publication_year": {
                        "type": "integer",
                        "example": 1925
                    }
                }
            },
            "ActionFailure": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "paths": {
        "/register": {
            "post": {
                "summary": "Register a new user.",
                "description": "This endpoint creates a new user into our system. Every user can use this call.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The action to create a user is not possible due to one of the following reasons:\n  - empty or unique name.\n  - empty or unique email.\n  - password requirements\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionFailure"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Logs on a user.",
                "description": "This endpoint logs on a user into the system. Every user can use this call.",
                "tags": [
                    "Login"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The response containing the login session.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionFailure"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/books": {
            "get": {
                "summary": "Reads the data of all books.",
                "description": "This endpoint returns the data of the books. Every user can use this call.",
                "tags": [
                    "Books"
                ],
                "responses": {
                    "200": {
                        "description": "Books retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new book.",
                "description": "This endpoint adds a new book into the system. Only logged-in users can use this call.",
                "tags": [
                    "Books"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The action to create a book is not possible due to one of the following reasons:\n  - empty or unique title.\n  - empty author.\n  - production year is not a valid date.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionFailure"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "delete": {
                "summary": "Deletes a book data.",
                "description": "This endpoint deletes a book. Only logged-in users can use this call.",
                "tags": [
                    "Books"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the book to delete"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Book deleted successfully"
                    },
                    "404": {
                        "description": "Book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionFailure"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Reads the data of the given book key.",
                "description": "This endpoint returns the data of the given book key. Only logged-in users can use this call.",
                "tags": [
                    "Books"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the book to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionFailure"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates the data of a given book.",
                "description": "This endpoint updates the data of an existing book. Only logged-in users can use this call.",
                "tags": [
                    "Books"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the book to update"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBookRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The action to update a book is not possible due to one of the following reasons:\n  - empty or unique title.\n  - empty author.\n  - production year is not a valid date.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionFailure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionFailure"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}